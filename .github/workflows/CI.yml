# This workflow will setup GitHub-hosted runners and install the required dependencies for elephant tests.
# On a pull requests and on pushes to master it will run all tests for elephant.

name: Elephant-tests
# define events that trigger workflow 'Elephant-tests'
on:
  # run on pull requests to master branch
  pull_request:
    branches: [master]
    types: [synchronize, opened, reopened, ready_for_review]
    
  # run on pushes to master branch
  push:
    #branches: [master]
    
# jobs define the steps that will be executed on the runner
jobs:
  build-and-test-pip:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # python versions for elephant: [3.6, 3.7, 3.8, 3.9]
        python-version: [3.8, ]
        # OS [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, windows-latest]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        #- os: macos-latest
        #  path: ~/Library/Caches/pip
        - os: windows-latest
          path: ~\AppData\Local\pip\Cache  
      # do not cancel all in-progress jobs if any matrix job fails
      fail-fast: false
        
    steps:
      - name: Get current year-month
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m')"
        
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          # Look to see if there is a cache hit for the corresponding requirements files
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/requirements-tests.txt') }}-${{ hashFiles('**/requirements-extras.txt') }}-${{ hashFiles('setup.py') }} -${{ steps.date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements-tests.txt
          pip install -r requirements/requirements.txt
          pip install -r requirements/requirements-extras.txt
          pip install pytest-cov coveralls
          pip install -e .
          
      - name: Test with pytest
        run: |
          pytest --cov=elephant
          
  test-conda:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    #- name: Set up Python 3.8
    #  uses: actions/setup-python@v2
    #  with:
    #    python-version: 3.8
        
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file requirements/environment.yml --name base
        conda install pytest-cov coveralls
    
    - name: Test with pytest
      run: |
        pytest --cov=elephant
